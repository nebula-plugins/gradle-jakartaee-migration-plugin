/*
 * Copyright 2022 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

plugins {
    id 'com.netflix.nebula.plugin-plugin' version '21.2.0'
    id 'org.jetbrains.kotlin.jvm' version '2.0.20'
    id 'java-gradle-plugin'
}

dependencies {
    implementation ('org.apache.tomcat:jakartaee-migration:1.0.6:shaded') {
        exclude group: '*', module: '*'
    }
}

description 'Provides Gradle capabilities and transforms to ease the migration from Java EE to Jakarta EE'

contacts {
    'nebula-plugins-oss@netflix.com' {
        moniker 'Nebula Plugins Maintainers'
        github 'nebula-plugins'
    }
}

gradlePlugin {
    plugins {
        jakartaeeMigration {
            id = 'com.netflix.nebula.jakartaee-migration'
            implementationClass = 'com.netflix.gradle.jakartaee.JakartaEeMigrationPlugin'
            displayName = 'Gradle Jakarta EE Migration Plugin'
            description = project.description
            tags.set(['nebula', 'javaee', 'jakartaee'])
        }
    }
}

kotlin {
    explicitApi()
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

idea {
    project {
        jdkName = '1.8'
        languageLevel = '1.8'
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

tasks.withType(GenerateModuleMetadata).configureEach {
    suppressedValidationErrors.add('enforced-platform')
}
